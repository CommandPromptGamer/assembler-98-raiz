
-- Exemplo de como seria a sintaxe do nosso montador
-- instruções no registrador DATA_REG não são possíveis
-- vou ver como mudar isso ou adicionar novas instruções.

section .text

	READ &(DATA_REG)      -> READ_DIRECT DATA_REG *
	READ &(DATA_REG + 1)  -> READ_DIRECT ( DATA_REG + 1 ) *
	LOAD &(DATA_REG)      -> LOAD_DIRECT DATA_REG *
	ADD  &(DATA_REG + 1)  -> ADD_DIRECT ( DATA_REG + 1 ) *
	STORE &(DATA_REG + 2) -> STORE_DIRECT ( DATA_REG + 2 ) *
	BRZERO ZERO           -> BRZERO_IMMEDIATE ZERO 
	BRPOS POSITIVE        -> BRPOS_IMMEDIATE  POSITIVE
	BRNEG NEGATIVE        -> BRNEG_IMMEDIATE  NEGATIVE 

	ZERO:       
	WRITE msg_zero        -> WRITE_DIRECT msg_zero
	STOP                  -> STOP      

	POSITIVE: 
	WRITE msg_pos         -> WRITE_DIRECT msg_pos
	STOP                  -> STOP 

	NEGATIVE:
	WRITE msg_neg         -> WRITE_DIRECT msg_neg
	STOP                  -> STOP 

section .data

    value    .word -32            -> DATA_REG = -32	
	msg_zero .asciiz "zero"    -> memcpy( &memory[data_reg + 1], "zero", 5 );
    msg_pos  .asciiz "positive" -> memcpy( &memory[data_reg + 6], "positive", 9); 
    msg_neg  .asciiz "negative" -> memcpy( &memory[data_reg + 15], "negative", 9);
    

